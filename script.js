let counter = 0;
const counterEl = document.getElementById('counter');
const tapEl = document.getElementById('tap');
const shareBtn = document.getElementById('share');
const resetBtn = document.getElementById('reset');
const tapArea = document.querySelector('.tap-area');

// –°—á—ë—Ç—á–∏–∫ –ø–æ –∫–ª–∏–∫—É –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫—É
tapEl.addEventListener('click', (event) => {
  counter++;
  counterEl.textContent = counter;

  updateImage(); // –ø—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø–æ—Ä–∞ –ª–∏ –ø–æ–º–µ–Ω—è—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É
  createParticles(event);
});

// –ü–æ–¥–µ–ª–∏—Ç—å—Å—è
shareBtn.addEventListener('click', () => {
  const text = `–ú–æ–π —Å—á—ë—Ç –≤ TapFox: ${counter}! ü¶ä`;
  if (navigator.share) {
    navigator.share({
      title: 'TapFox',
      text: text,
      url: window.location.href
    });
  } else {
    alert('–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –º–æ–∂–Ω–æ —Ç–∞–∫: ' + text);
  }
});

// –°–±—Ä–æ—Å
resetBtn.addEventListener('click', () => {
  counter = 0;
  counterEl.textContent = counter;
  updateImage();
});

// –§—É–Ω–∫—Ü–∏—è: —Å–º–µ–Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –ø—Ä–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ –ø–æ—Ä–æ–≥–∞
function updateImage() {
  if (counter < 20) {
    tapEl.src = "fox1.png";
  } else if (counter < 50) {
    tapEl.src = "fox2.png";
  } else if (counter < 100) {
    tapEl.src = "fox3.png";
  } else if (counter < 200) {
    tapEl.src = "fox4.png";
  } else {
    tapEl.src = "fox5.png";
  }
}

// –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —á–∞—Å—Ç–∏—Ü (—Å–µ—Ä–¥–µ—á–∫–∏/–∑–≤—ë–∑–¥–æ—á–∫–∏)
function createParticles(event) {
  for (let i = 0; i < 5; i++) {
    const particle = document.createElement('div');
    particle.classList.add('particle');
    particle.textContent = 'üíñ';

    const angle = Math.random() * 2 * Math.PI;
    const distance = 50 + Math.random() * 30;
    const x = Math.cos(angle) * distance + 'px';
    const y = Math.sin(angle) * distance + 'px';

    particle.style.setProperty('--x', x);
    particle.style.setProperty('--y', y);

    const rect = tapEl.getBoundingClientRect();
    particle.style.left = rect.width / 2 + 'px';
    particle.style.top = rect.height / 2 + 'px';

    tapArea.appendChild(particle);

    setTimeout(() => {
      particle.remove();
    }, 1000);
  }
}
